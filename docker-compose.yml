services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-nbfc_db}
      POSTGRES_USER: ${DB_USER:-nbfc_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-nbfc_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-nbfc_user} -d ${DB_NAME:-nbfc_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: tauqeerops/nbfc-django-api:env-fix
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Dynamic host configuration
      - DB_HOST=db
      - DB_USER=${DB_USER:-nbfc_user}
      - DB_PASSWORD=${DB_PASSWORD:-nbfc_password}
      - ALLOWED_HOSTS=${HOST_DOMAIN:-40.90.224.166},${HOST_IP:-40.90.224.166},0.0.0.0,web
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
